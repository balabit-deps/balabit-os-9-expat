From cce19de59f849cbee55c8c62e77481593fac1468 Mon Sep 17 00:00:00 2001
From: Sebastian Pipping <sebastian@pipping.org>
Date: Fri, 20 Oct 2023 23:24:46 +0200
Subject: [PATCH] tests: Rename _fail_unless to _assert_true for clarity

---
Index: expat-2.4.7/expat/tests/minicheck.c
===================================================================
--- expat-2.4.7.orig/expat/tests/minicheck.c
+++ expat-2.4.7/expat/tests/minicheck.c
@@ -209,7 +209,7 @@ srunner_run_all(SRunner *runner, int ver
 }
 
 void
-_fail_unless(int condition, const char *file, int line, const char *msg) {
+_assert_true(int condition, const char *file, int line, const char *msg) {
   /* Always print the error message so it isn't lost.  In this case,
      we have a failure, so there's no reason to be quiet about what
      it is.
Index: expat-2.4.7/expat/tests/minicheck.h
===================================================================
--- expat-2.4.7.orig/expat/tests/minicheck.h
+++ expat-2.4.7/expat/tests/minicheck.h
@@ -64,10 +64,10 @@ extern "C" {
   }                                                                            \
   }
 
-#define fail(msg) _fail_unless(0, __FILE__, __LINE__, msg)
+#define fail(msg) _assert_true(0, __FILE__, __LINE__, msg)
 
-#define fail_unless(cond)                                                       \
-    _fail_unless((cond), __FILE__, __LINE__, "check failed: " #cond)
+#define assert_true(cond)                                                      \
+    _assert_true((cond), __FILE__, __LINE__, "check failed: " #cond)
 
 typedef void (*tcase_setup_function)(void);
 typedef void (*tcase_teardown_function)(void);
@@ -106,7 +106,7 @@ void _check_set_test_info(char const *fu
  * Prototypes for the actual implementation.
  */
 
-void _fail_unless(int condition, const char *file, int line, const char *msg);
+void _assert_true(int condition, const char *file, int line, const char *msg);
 Suite *suite_create(const char *name);
 TCase *tcase_create(const char *name);
 void suite_add_tcase(Suite *suite, TCase *tc);
Index: expat-2.4.7/expat/tests/runtests.c
===================================================================
--- expat-2.4.7.orig/expat/tests/runtests.c
+++ expat-2.4.7/expat/tests/runtests.c
@@ -136,7 +136,7 @@ _xml_failure(XML_Parser parser, const ch
           "u, offset %" XML_FMT_INT_MOD "u)\n    reported from %s, line %d\n",
           err, XML_ErrorString(err), XML_GetCurrentLineNumber(parser),
           XML_GetCurrentColumnNumber(parser), file, line);
-  _fail_unless(0, file, line, buffer);
+  _assert_true(0, file, line, buffer);
 }
 
 static enum XML_Status
@@ -167,9 +167,9 @@ _expect_failure(const char *text, enum X
                 const char *errorMessage, const char *file, int lineno) {
   if (_XML_Parse_SINGLE_BYTES(g_parser, text, (int)strlen(text), XML_TRUE)
       == XML_STATUS_OK)
-    /* Hackish use of _fail_unless() macro, but let's us report
+    /* Hackish use of _assert_true() macro, but let's us report
        the right filename and line number. */
-    _fail_unless(0, file, lineno, errorMessage);
+    _assert_true(0, file, lineno, errorMessage);
   if (XML_GetErrorCode(g_parser) != errorCode)
     _xml_failure(g_parser, file, lineno);
 }
